#!/bin/bash

# Stop on failure
set -e

REPO_ROOT="$(git rev-parse --show-toplevel)"

PYTHON_EXE="/usr/bin/python3.11"

day-no-time() {
    if [ -z "$1" ]; then
        echo "Must provide day to run" 1>&2
        return 1
    fi
    day_str=$(printf "%02d" "$1")
    shift

    echo "----- Day $day_str -----"
    "$PYTHON_EXE" "$REPO_ROOT/days/day_$day_str.py" "$REPO_ROOT/data/day_$day_str.txt" $@
}

day() {
    day-no-time $@
    day_str=$(printf "%02d" "$1")
    shift
    # Run with timeit to get time
    "$PYTHON_EXE" -m timeit -s "import days" "days.day_$day_str.main(['data/day_$day_str.txt'])" | tail -n 1
}

all-days() {
    for i in {1..25}; do
        day_str=$(printf "%02d" "$i")
        if [ -f "$REPO_ROOT/days/day_$day_str.py" ]; then
            day "$i" $@
        fi
    done
}

test() {
    if [ -z "$1" ]; then
        echo "Must provide day to run" 1>&2
        return 1
    fi
    day_str=$(printf "%02d" "$1")
    shift
    "$PYTHON_EXE" -m pytest "$REPO_ROOT/tests/test_day_$day_str.py" $@
}

all-tests() {
    "$PYTHON_EXE" -m pytest "$REPO_ROOT/tests" $@
}

sa() {
    "$PYTHON_EXE" -m mypy --strict "$REPO_ROOT/days" "$REPO_ROOT/tests" $@
    "$PYTHON_EXE" -m pylint --errors-only "$REPO_ROOT/days" "$REPO_ROOT/tests" $@
}

autoformat() {
    "$PYTHON_EXE" -m isort --profile black -l 79 --gitignore --combine-as --combine-star --force-grid-wrap -- "$REPO_ROOT/days" "$REPO_ROOT/tests"
    "$PYTHON_EXE" -m black -l 79 -- "$REPO_ROOT/days" "$REPO_ROOT/tests"
}

everything() {
    all-days
    all-tests
    sa
    autoformat
}

create-day-from-template() {
    if [ -z "$1" ]; then
        echo "Must provide day to create from template" 1>&2
        return 1
    fi
    day_str=$(printf "%02d" "$1")

    day_file="$REPO_ROOT/days/day_$day_str.py"
    if [ -f "$day_file" ]; then
        echo "$day_file already exists" 1>&2
        return 1
    fi
    cp "$REPO_ROOT/days/day_template.py" "$day_file"
    sed -i 's~day_template~'"day_$day_str"'~g' -- "$day_file"

    test_file="$REPO_ROOT/tests/test_day_$day_str.py"
    if [ -f "$test_file" ]; then
        echo "$test_file already exists" 1>&2
        return 1
    fi
    cp "$REPO_ROOT/tests/day_template.py" "$test_file"
    sed -i 's~day_template~'"day_$day_str"'~g' -- "$test_file"
}

help() {
    echo "$0 <task> <args>"
    echo "Tasks:"
    compgen -A function | cat -n
}

if [ -z "$1" ]; then
    help
else
    "${@:-check}"
fi
